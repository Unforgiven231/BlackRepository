import java.util.Map;

public class Executable {

  static public String[][] player1 = new String[10][10];
  static public String[][] player2 = new String[10][10];

    public static void main(String[] args) {

        startGame();



    }

    public static void startGame(){

        /* корабли игрока 1 */
        OneDecked opl1 = new OneDecked();
        OneDecked opl2 = new OneDecked();
        OneDecked opl3 = new OneDecked();
        OneDecked opl4 = new OneDecked();

        opl1.inputCoordinates();
        toMarkCoordinates(opl1, player1, player2);
        opl2.inputCoordinates();
        toMarkCoordinates(opl2, player1, player2);
        opl3.inputCoordinates();
        toMarkCoordinates(opl3, player1, player2);
        opl4.inputCoordinates();
        toMarkCoordinates(opl4, player1, player2);




        /*==================================Тестовый вывод на экран========================
        * ===================================Писать код выше=============================== */
        System.out.println(OneDecked.getShipsRemains());

        for (int i = 0; i <= player1.length-1; i++){
            for (int j = 0; j <= player1.length-1; j++){
                System.out.print(player1[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();

        for (int i = 0; i <= player2.length-1; i++){
            for (int j = 0; j <= player2.length-1; j++){
                System.out.print(player2[i][j] + " ");
            }
            System.out.println();
        }

    }

    public static void toMarkCoordinates(OneDecked ship ,String[][] player1, String[][] player2) {


        for (int i = 0; i <= player1.length - 1; i++) {
            for (int j = 0; j <= player1.length - 1; j++) {

                for (int k = 0; k < ship.arrayOfCor.length; k++) {
                    if (ship.arrayOfCor[0] == i && ship.arrayOfCor[1] == j) {
                        player1[i][j] = "|==|";
                        player2[i][j] = "|<>|";

                    }
                }
            }
        }


    }


}
